C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/12/2023 21:37:01 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\elass\S
                    -implicityStudio\v5_workspace\lamp_2\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY
                    -(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\elass\SimplicityStudio\v5_workspace\l
                    -amp_2\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/shared/si8051Base;C:/SiliconLabs/Simplic
                    -ityStudio/v5/developer/sdks/8051/v4.2.5//Device/EFM8BB52/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH
                    -(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB52_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        // Save the SFRPAGE
  27   1        uint8_t SFRPAGE_save = SFRPAGE;
  28   1        WDT_0_enter_DefaultMode_from_RESET ();
  29   1        PORTS_0_enter_DefaultMode_from_RESET ();
  30   1        PORTS_1_enter_DefaultMode_from_RESET ();
  31   1        PORTS_3_enter_DefaultMode_from_RESET ();
  32   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  33   1        CLOCK_0_enter_DefaultMode_from_RESET ();
  34   1        CIP51_0_enter_DefaultMode_from_RESET ();
  35   1        PWM_0_enter_DefaultMode_from_RESET ();
  36   1        // Restore the SFRPAGE
  37   1        SFRPAGE = SFRPAGE_save;
  38   1        // [Config Calls]$
  39   1      
  40   1      }
  41          
  42          extern void
  43          WDT_0_enter_DefaultMode_from_RESET (void)
  44          {
  45   1        // $[Watchdog Timer Init Variable Declarations]
  46   1        uint32_t i;
  47   1        bool ea;
  48   1        // [Watchdog Timer Init Variable Declarations]$
  49   1      
  50   1        // $[WDTCN - Watchdog Timer Control]
  51   1        SFRPAGE = 0x00;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/12/2023 21:37:01 PAGE 2   

  52   1      
  53   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  54   1        WDTCN = 0xA5;
  55   1      
  56   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  57   1        for (i = 0; i < (2 * 3062500UL) / (80000 * 3); i++)
  58   1          {
  59   2            NOP ();
  60   2          }
  61   1      
  62   1        // Disable WDT
  63   1        ea = IE_EA;
  64   1        IE_EA = 0;
  65   1        WDTCN = 0xDE;
  66   1        WDTCN = 0xAD;
  67   1        IE_EA = ea;
  68   1      
  69   1        // [WDTCN - Watchdog Timer Control]$
  70   1      
  71   1      }
  72          
  73          extern void
  74          PORTS_0_enter_DefaultMode_from_RESET (void)
  75          {
  76   1        // $[P0 - Port 0 Pin Latch]
  77   1        // [P0 - Port 0 Pin Latch]$
  78   1      
  79   1        // $[P0MDOUT - Port 0 Output Mode]
  80   1        /***********************************************************************
  81   1         - P0.0 output is push-pull
  82   1         - P0.1 output is push-pull
  83   1         - P0.2 output is open-drain
  84   1         - P0.3 output is open-drain
  85   1         - P0.4 output is open-drain
  86   1         - P0.5 output is open-drain
  87   1         - P0.6 output is open-drain
  88   1         - P0.7 output is open-drain
  89   1         ***********************************************************************/
  90   1        P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__PUSH_PULL
  91   1            | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN | P0MDOUT_B4__OPEN_DRAIN
  92   1            | P0MDOUT_B5__OPEN_DRAIN | P0MDOUT_B6__OPEN_DRAIN
  93   1            | P0MDOUT_B7__OPEN_DRAIN;
  94   1        // [P0MDOUT - Port 0 Output Mode]$
  95   1      
  96   1        // $[P0MDIN - Port 0 Input Mode]
  97   1        /***********************************************************************
  98   1         - P0.0 pin is configured for digital mode
  99   1         - P0.1 pin is configured for digital mode
 100   1         - P0.2 pin is configured for analog mode
 101   1         - P0.3 pin is configured for analog mode
 102   1         - P0.4 pin is configured for analog mode
 103   1         - P0.5 pin is configured for analog mode
 104   1         - P0.6 pin is configured for analog mode
 105   1         - P0.7 pin is configured for analog mode
 106   1         ***********************************************************************/
 107   1        P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__ANALOG
 108   1            | P0MDIN_B3__ANALOG | P0MDIN_B4__ANALOG | P0MDIN_B5__ANALOG
 109   1            | P0MDIN_B6__ANALOG | P0MDIN_B7__ANALOG;
 110   1        // [P0MDIN - Port 0 Input Mode]$
 111   1      
 112   1        // $[P0SKIP - Port 0 Skip]
 113   1        // [P0SKIP - Port 0 Skip]$
 114   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/12/2023 21:37:01 PAGE 3   

 115   1        // $[P0MASK - Port 0 Mask]
 116   1        // [P0MASK - Port 0 Mask]$
 117   1      
 118   1        // $[P0MAT - Port 0 Match]
 119   1        // [P0MAT - Port 0 Match]$
 120   1      
 121   1      }
 122          
 123          extern void
 124          PBCFG_0_enter_DefaultMode_from_RESET (void)
 125          {
 126   1        // $[XBR2 - Port I/O Crossbar 2]
 127   1        /***********************************************************************
 128   1         - Weak Pullups enabled 
 129   1         - Crossbar enabled
 130   1         - PWM single ended output for all enabled channels
 131   1         - UART1 I/O unavailable at Port pin
 132   1         - UART1 RTS1 unavailable at Port pin
 133   1         - UART1 CTS1 unavailable at Port pin
 134   1         - PWM0 Ch0 and Ch1 routed to Port pin
 135   1         ***********************************************************************/
 136   1        SFRPAGE = 0x00;
 137   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 138   1            | XBR2_PWMDE__SINGLE | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 139   1            | XBR2_URT1CTSE__DISABLED | XBR2_PWME__PWM0CH01;
 140   1        // [XBR2 - Port I/O Crossbar 2]$
 141   1      
 142   1        // $[PRTDRV - Port Drive Strength]
 143   1        // [PRTDRV - Port Drive Strength]$
 144   1      
 145   1        // $[XBR0 - Port I/O Crossbar 0]
 146   1        // [XBR0 - Port I/O Crossbar 0]$
 147   1      
 148   1        // $[XBR1 - Port I/O Crossbar 1]
 149   1        // [XBR1 - Port I/O Crossbar 1]$
 150   1      
 151   1      }
 152          
 153          extern void
 154          CLOCK_0_enter_DefaultMode_from_RESET (void)
 155          {
 156   1        // $[HFOSC0 49 and 49/1.5 MHz Oscillator Setup]
 157   1        // Ensure SYSCLK is > 24 MHz before switching to 49 MHz or 49/1.5 MHz Oscillator
 158   1        CLKSEL = CLKSEL_CLKSL__HFOSC0_clk24p5 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 159   1        while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 160   1          ;
 161   1        // [HFOSC0 49 and 49/1.5 MHz Oscillator Setup]$
 162   1      
 163   1        // $[CLKSEL - Clock Select]
 164   1        /***********************************************************************
 165   1         - Clock derived from the Internal High Frequency Oscillator 49 MHz
 166   1         - SYSCLK is equal to selected clock source divided by 1
 167   1         ***********************************************************************/
 168   1        CLKSEL = CLKSEL_CLKSL__HFOSC0_clk49 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 169   1        while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 170   1          ;
 171   1        // [CLKSEL - Clock Select]$
 172   1      
 173   1        // $[CLKGRP0 - Clock Group 0]
 174   1        // [CLKGRP0 - Clock Group 0]$
 175   1      
 176   1      }
 177          
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/12/2023 21:37:01 PAGE 4   

 178          extern void
 179          CIP51_0_enter_DefaultMode_from_RESET (void)
 180          {
 181   1        // $[PFE0CN - Prefetch Engine Control]
 182   1        /***********************************************************************
 183   1         - Enables the Prefetch Engine when SYSCLK < 50 MHz
 184   1         ***********************************************************************/
 185   1        SFRPAGE = 0x10;
 186   1        PFE0CN = PFE0CN_FLRT__SYSCLK_BELOW_50_MHZ;
 187   1        // [PFE0CN - Prefetch Engine Control]$
 188   1      
 189   1      }
 190          
 191          extern void
 192          PWM_0_enter_DefaultMode_from_RESET (void)
 193          {
 194   1        // $[Stop PWM]
 195   1        PWMCFG1 &= ~(PWMCFG1_PWMEN__BMASK);
 196   1        // [Stop PWM]$
 197   1      
 198   1        // $[PWMCKDIV - PWMCKDIV]
 199   1        // [PWMCKDIV - PWMCKDIV]$
 200   1      
 201   1        // $[PWMCFG0 - PWM Configuration 0]
 202   1        /***********************************************************************
 203   1         - Enable clock to the PWM module
 204   1         - PWM will operate in Edge-aligned mode
 205   1         - No channels will be synchronously updated
 206   1         - PWM will continue running on breakpoints in debug mode
 207   1         - Rising edge on the enabled external trigger will start PWM counter
 208   1         - Disable Kill0 signal to halt the PWM
 209   1         - Disable Kill1 signal to halt the PWM
 210   1         ***********************************************************************/
 211   1        PWMCFG0 = PWMCFG0_PWMCLKEN__ENABLE | PWMCFG0_PWMMODE__EDGE
 212   1            | PWMCFG0_SYNCUPD__NOSYNCUPD | PWMCFG0_DBGSTLEN__DISABLE
 213   1            | PWMCFG0_TRGESEL__REDGE | PWMCFG0_KILL0EN__DISABLE
 214   1            | PWMCFG0_KILL1EN__DISABLE;
 215   1        // [PWMCFG0 - PWM Configuration 0]$
 216   1      
 217   1        // $[PWMCFG1 - PWM Configuration 1]
 218   1        // [PWMCFG1 - PWM Configuration 1]$
 219   1      
 220   1        // $[PWMCFG2 - PWM Configuration 2]
 221   1        // [PWMCFG2 - PWM Configuration 2]$
 222   1      
 223   1        // $[PWMCFG3 - PWMCFG3]
 224   1        // [PWMCFG3 - PWMCFG3]$
 225   1      
 226   1        // $[PWML - PWML]
 227   1        // [PWML - PWML]$
 228   1      
 229   1        // $[PWMH - PWMH]
 230   1        // [PWMH - PWMH]$
 231   1      
 232   1        // $[PWMLIML - PWMLIML]
 233   1        /***********************************************************************
 234   1         - PWM Counter Limit LSB = 0xFF
 235   1         ***********************************************************************/
 236   1        PWMLIML = (0xFF << PWMLIML_PWMLIML__SHIFT);
 237   1        // [PWMLIML - PWMLIML]$
 238   1      
 239   1        // $[PWMLIMH - PWMLIMH]
 240   1        /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/12/2023 21:37:01 PAGE 5   

 241   1         - PWM Counter Limit MSB = 0xFF
 242   1         ***********************************************************************/
 243   1        PWMLIMH = (0xFF << PWMLIMH_PWMLIMH__SHIFT);
 244   1        // [PWMLIMH - PWMLIMH]$
 245   1      
 246   1        // $[PWMDTIPLIM - PWMDTIPLIM]
 247   1        // [PWMDTIPLIM - PWMDTIPLIM]$
 248   1      
 249   1        // $[PWMDTINLIM - PWMDTINLIM]
 250   1        // [PWMDTINLIM - PWMDTINLIM]$
 251   1      
 252   1        // $[PWMIE - PWMIE]
 253   1        // [PWMIE - PWMIE]$
 254   1      
 255   1        // Set the compare registers of channels 0 and 1 to sensible initial values.
 256   1        // This is done synchronously, although that's not strictly necessary at this
 257   1        // time since we haven't enabled the peripheral yet.
 258   1        // See pwm_set() for further information.
 259   1        PWMCFG0 &= ~PWMCFG0_SYNCUPD__FMASK;
 260   1        PWMCPUDL0 = DEFAULT_PWM_CHANNEL0 & 0xff;
 261   1        PWMCPUDH0 = (DEFAULT_PWM_CHANNEL0 >> 8) & 0xff;
 262   1        PWMCPUDL1 = DEFAULT_PWM_CHANNEL1 & 0xff;
 263   1        PWMCPUDH1 = (DEFAULT_PWM_CHANNEL1 >> 8) & 0xff;
 264   1        PWMCFG0 |= PWMCFG0_SYNCUPD__CH0CH1CH2;
 265   1      
 266   1        // Enable output on channels 0 and 1.
 267   1        PWMCFG2 |= PWMCFG2_CH0EN__BMASK;
 268   1        PWMCFG2 |= PWMCFG2_CH1EN__BMASK;
 269   1      
 270   1        // $[PWM On]
 271   1        PWMCFG1 |= PWMCFG1_PWMEN__ENABLE;
 272   1        // [PWM On]$
 273   1      
 274   1      }
 275          
 276          extern void
 277          PORTS_3_enter_DefaultMode_from_RESET (void)
 278          {
 279   1        // $[P3 - Port 3 Pin Latch]
 280   1        // [P3 - Port 3 Pin Latch]$
 281   1      
 282   1        // $[P3MDOUT - Port 3 Output Mode]
 283   1        // [P3MDOUT - Port 3 Output Mode]$
 284   1      
 285   1        // $[P3MDIN - Port 3 Input Mode]
 286   1        /***********************************************************************
 287   1         - P3.0 pin is configured for digital mode
 288   1         - P3.1 pin is configured for digital mode
 289   1         - P3.2 pin is configured for digital mode
 290   1         - P3.3 pin is configured for digital mode
 291   1         - P3.4 pin is configured for digital mode
 292   1         - P3.7 pin is configured for analog mode
 293   1         ***********************************************************************/
 294   1        SFRPAGE = 0x20;
 295   1        P3MDIN = P3MDIN_B0__DIGITAL | P3MDIN_B1__DIGITAL | P3MDIN_B2__DIGITAL
 296   1            | P3MDIN_B3__DIGITAL | P3MDIN_B4__DIGITAL | P3MDIN_B7__ANALOG;
 297   1        // [P3MDIN - Port 3 Input Mode]$
 298   1      
 299   1      }
 300          
 301          extern void
 302          PORTS_1_enter_DefaultMode_from_RESET (void)
 303          {
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/12/2023 21:37:01 PAGE 6   

 304   1        // $[P1 - Port 1 Pin Latch]
 305   1        // [P1 - Port 1 Pin Latch]$
 306   1      
 307   1        // $[P1MDOUT - Port 1 Output Mode]
 308   1        /***********************************************************************
 309   1         - P1.0 output is open-drain
 310   1         - P1.1 output is open-drain
 311   1         - P1.2 output is open-drain
 312   1         - P1.3 output is open-drain
 313   1         - P1.4 output is push-pull
 314   1         - P1.5 output is open-drain
 315   1         - P1.6 output is open-drain
 316   1         - P1.7 output is open-drain
 317   1         ***********************************************************************/
 318   1        P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 319   1            | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__PUSH_PULL
 320   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__OPEN_DRAIN
 321   1            | P1MDOUT_B7__OPEN_DRAIN;
 322   1        // [P1MDOUT - Port 1 Output Mode]$
 323   1      
 324   1        // $[P1MDIN - Port 1 Input Mode]
 325   1        /***********************************************************************
 326   1         - P1.0 pin is configured for analog mode
 327   1         - P1.1 pin is configured for analog mode
 328   1         - P1.2 pin is configured for analog mode
 329   1         - P1.3 pin is configured for analog mode
 330   1         - P1.4 pin is configured for digital mode
 331   1         - P1.5 pin is configured for analog mode
 332   1         - P1.6 pin is configured for analog mode
 333   1         - P1.7 pin is configured for analog mode
 334   1         ***********************************************************************/
 335   1        P1MDIN = P1MDIN_B0__ANALOG | P1MDIN_B1__ANALOG | P1MDIN_B2__ANALOG
 336   1            | P1MDIN_B3__ANALOG | P1MDIN_B4__DIGITAL | P1MDIN_B5__ANALOG
 337   1            | P1MDIN_B6__ANALOG | P1MDIN_B7__ANALOG;
 338   1        // [P1MDIN - Port 1 Input Mode]$
 339   1      
 340   1        // $[P1SKIP - Port 1 Skip]
 341   1        // [P1SKIP - Port 1 Skip]$
 342   1      
 343   1        // $[P1MASK - Port 1 Mask]
 344   1        // [P1MASK - Port 1 Mask]$
 345   1      
 346   1        // $[P1MAT - Port 1 Match]
 347   1        // [P1MAT - Port 1 Match]$
 348   1      
 349   1      }
 350          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    199    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
