C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/23/2023 06:07:28 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\elass\S
                    -implicityStudio\v5_workspace\lamp_2\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY
                    -(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\elass\SimplicityStudio\v5_workspace\
                    -lamp_2\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/shared/si8051Base;C:/SiliconLabs/Simpli
                    -cityStudio/v5/developer/sdks/8051/v4.2.5//Device/EFM8BB52/inc) REGFILE(lamp_2.ORC) PRINT(.\src\InitDevice.lst) COND PAGE
                    -WIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB52_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        // Save the SFRPAGE
  27   1        uint8_t SFRPAGE_save = SFRPAGE;
  28   1        WDT_0_enter_DefaultMode_from_RESET ();
  29   1        PORTS_0_enter_DefaultMode_from_RESET ();
  30   1        PORTS_1_enter_DefaultMode_from_RESET ();
  31   1        PORTS_3_enter_DefaultMode_from_RESET ();
  32   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  33   1        CLOCK_0_enter_DefaultMode_from_RESET ();
  34   1        CIP51_0_enter_DefaultMode_from_RESET ();
  35   1        TIMER01_0_enter_DefaultMode_from_RESET ();
  36   1        TIMER16_2_enter_DefaultMode_from_RESET ();
  37   1        TIMER16_3_enter_DefaultMode_from_RESET ();
  38   1        TIMER16_4_enter_DefaultMode_from_RESET ();
  39   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  40   1        PWM_0_enter_DefaultMode_from_RESET ();
  41   1        UART_0_enter_DefaultMode_from_RESET ();
  42   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  43   1        // Restore the SFRPAGE
  44   1        SFRPAGE = SFRPAGE_save;
  45   1        // [Config Calls]$
  46   1      
  47   1      }
  48          
  49          extern void
  50          WDT_0_enter_DefaultMode_from_RESET (void)
  51          {
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/23/2023 06:07:28 PAGE 2   

  52   1        // $[Watchdog Timer Init Variable Declarations]
  53   1        uint32_t i;
  54   1        bool ea;
  55   1        // [Watchdog Timer Init Variable Declarations]$
  56   1      
  57   1        // $[WDTCN - Watchdog Timer Control]
  58   1        SFRPAGE = 0x00;
  59   1      
  60   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  61   1        WDTCN = 0xA5;
  62   1      
  63   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  64   1        for (i = 0; i < (2 * 3062500UL) / (80000 * 3); i++)
  65   1          {
  66   2            NOP ();
  67   2          }
  68   1      
  69   1        // Disable WDT
  70   1        ea = IE_EA;
  71   1        IE_EA = 0;
  72   1        WDTCN = 0xDE;
  73   1        WDTCN = 0xAD;
  74   1        IE_EA = ea;
  75   1      
  76   1        // [WDTCN - Watchdog Timer Control]$
  77   1      
  78   1      }
  79          
  80          extern void
  81          PORTS_0_enter_DefaultMode_from_RESET (void)
  82          {
  83   1        // $[P0 - Port 0 Pin Latch]
  84   1        // [P0 - Port 0 Pin Latch]$
  85   1      
  86   1        // $[P0MDOUT - Port 0 Output Mode]
  87   1        /***********************************************************************
  88   1         - P0.0 output is push-pull
  89   1         - P0.1 output is push-pull
  90   1         - P0.2 output is open-drain
  91   1         - P0.3 output is open-drain
  92   1         - P0.4 output is push-pull
  93   1         - P0.5 output is open-drain
  94   1         - P0.6 output is open-drain
  95   1         - P0.7 output is open-drain
  96   1         ***********************************************************************/
  97   1        P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__PUSH_PULL
  98   1            | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN | P0MDOUT_B4__PUSH_PULL
  99   1            | P0MDOUT_B5__OPEN_DRAIN | P0MDOUT_B6__OPEN_DRAIN
 100   1            | P0MDOUT_B7__OPEN_DRAIN;
 101   1        // [P0MDOUT - Port 0 Output Mode]$
 102   1      
 103   1        // $[P0MDIN - Port 0 Input Mode]
 104   1        /***********************************************************************
 105   1         - P0.0 pin is configured for digital mode
 106   1         - P0.1 pin is configured for digital mode
 107   1         - P0.2 pin is configured for analog mode
 108   1         - P0.3 pin is configured for analog mode
 109   1         - P0.4 pin is configured for digital mode
 110   1         - P0.5 pin is configured for digital mode
 111   1         - P0.6 pin is configured for analog mode
 112   1         - P0.7 pin is configured for analog mode
 113   1         ***********************************************************************/
 114   1        P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__ANALOG
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/23/2023 06:07:28 PAGE 3   

 115   1            | P0MDIN_B3__ANALOG | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 116   1            | P0MDIN_B6__ANALOG | P0MDIN_B7__ANALOG;
 117   1        // [P0MDIN - Port 0 Input Mode]$
 118   1      
 119   1        // $[P0SKIP - Port 0 Skip]
 120   1        // [P0SKIP - Port 0 Skip]$
 121   1      
 122   1        // $[P0MASK - Port 0 Mask]
 123   1        // [P0MASK - Port 0 Mask]$
 124   1      
 125   1        // $[P0MAT - Port 0 Match]
 126   1        // [P0MAT - Port 0 Match]$
 127   1      
 128   1      }
 129          
 130          extern void
 131          PBCFG_0_enter_DefaultMode_from_RESET (void)
 132          {
 133   1        // $[XBR2 - Port I/O Crossbar 2]
 134   1        /***********************************************************************
 135   1         - Weak Pullups enabled 
 136   1         - Crossbar enabled
 137   1         - PWM single ended output for all enabled channels
 138   1         - UART1 I/O unavailable at Port pin
 139   1         - UART1 RTS1 unavailable at Port pin
 140   1         - UART1 CTS1 unavailable at Port pin
 141   1         - PWM0 Ch0 and Ch1 routed to Port pin
 142   1         ***********************************************************************/
 143   1        SFRPAGE = 0x00;
 144   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 145   1            | XBR2_PWMDE__SINGLE | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 146   1            | XBR2_URT1CTSE__DISABLED | XBR2_PWME__PWM0CH01;
 147   1        // [XBR2 - Port I/O Crossbar 2]$
 148   1      
 149   1        // $[PRTDRV - Port Drive Strength]
 150   1        // [PRTDRV - Port Drive Strength]$
 151   1      
 152   1        // $[XBR0 - Port I/O Crossbar 0]
 153   1        /***********************************************************************
 154   1         - UART0 TX0, RX0 routed to Port pins P0.4 and P0.5
 155   1         - SPI I/O unavailable at Port pins
 156   1         - SMBus 0 I/O unavailable at Port pins
 157   1         - CP0 unavailable at Port pin
 158   1         - Asynchronous CP0 unavailable at Port pin
 159   1         - CP1 unavailable at Port pin
 160   1         - Asynchronous CP1 unavailable at Port pin
 161   1         - SYSCLK unavailable at Port pin
 162   1         ***********************************************************************/
 163   1        XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
 164   1            | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 165   1            | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 166   1        // [XBR0 - Port I/O Crossbar 0]$
 167   1      
 168   1        // $[XBR1 - Port I/O Crossbar 1]
 169   1        // [XBR1 - Port I/O Crossbar 1]$
 170   1      
 171   1      }
 172          
 173          extern void
 174          CLOCK_0_enter_DefaultMode_from_RESET (void)
 175          {
 176   1        // $[HFOSC0 49 and 49/1.5 MHz Oscillator Setup]
 177   1        // Ensure SYSCLK is > 24 MHz before switching to 49 MHz or 49/1.5 MHz Oscillator
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/23/2023 06:07:28 PAGE 4   

 178   1        CLKSEL = CLKSEL_CLKSL__HFOSC0_clk24p5 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 179   1        while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 180   1          ;
 181   1        // [HFOSC0 49 and 49/1.5 MHz Oscillator Setup]$
 182   1      
 183   1        // $[CLKSEL - Clock Select]
 184   1        /***********************************************************************
 185   1         - Clock derived from the Internal High Frequency Oscillator 49 MHz
 186   1         - SYSCLK is equal to selected clock source divided by 1
 187   1         ***********************************************************************/
 188   1        CLKSEL = CLKSEL_CLKSL__HFOSC0_clk49 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 189   1        while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 190   1          ;
 191   1        // [CLKSEL - Clock Select]$
 192   1      
 193   1        // $[CLKGRP0 - Clock Group 0]
 194   1        // [CLKGRP0 - Clock Group 0]$
 195   1      
 196   1      }
 197          
 198          extern void
 199          CIP51_0_enter_DefaultMode_from_RESET (void)
 200          {
 201   1        // $[PFE0CN - Prefetch Engine Control]
 202   1        /***********************************************************************
 203   1         - Enables the Prefetch Engine when SYSCLK < 50 MHz
 204   1         ***********************************************************************/
 205   1        SFRPAGE = 0x10;
 206   1        PFE0CN = PFE0CN_FLRT__SYSCLK_BELOW_50_MHZ;
 207   1        // [PFE0CN - Prefetch Engine Control]$
 208   1      
 209   1      }
 210          
 211          extern void
 212          PWM_0_enter_DefaultMode_from_RESET (void)
 213          {
 214   1        // $[Stop PWM]
 215   1        SFRPAGE = 0x10;
 216   1        PWMCFG1 &= ~(PWMCFG1_PWMEN__BMASK);
 217   1        // [Stop PWM]$
 218   1      
 219   1        // $[PWMCKDIV - PWMCKDIV]
 220   1        // [PWMCKDIV - PWMCKDIV]$
 221   1      
 222   1        // $[PWMCFG0 - PWM Configuration 0]
 223   1        /***********************************************************************
 224   1         - Enable clock to the PWM module
 225   1         - PWM will operate in Edge-aligned mode
 226   1         - No channels will be synchronously updated
 227   1         - PWM will continue running on breakpoints in debug mode
 228   1         - Rising edge on the enabled external trigger will start PWM counter
 229   1         - Disable Kill0 signal to halt the PWM
 230   1         - Disable Kill1 signal to halt the PWM
 231   1         ***********************************************************************/
 232   1        PWMCFG0 = PWMCFG0_PWMCLKEN__ENABLE | PWMCFG0_PWMMODE__EDGE
 233   1            | PWMCFG0_SYNCUPD__NOSYNCUPD | PWMCFG0_DBGSTLEN__DISABLE
 234   1            | PWMCFG0_TRGESEL__REDGE | PWMCFG0_KILL0EN__DISABLE
 235   1            | PWMCFG0_KILL1EN__DISABLE;
 236   1        // [PWMCFG0 - PWM Configuration 0]$
 237   1      
 238   1        // $[PWMCFG1 - PWM Configuration 1]
 239   1        // [PWMCFG1 - PWM Configuration 1]$
 240   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/23/2023 06:07:28 PAGE 5   

 241   1        // $[PWMCFG2 - PWM Configuration 2]
 242   1        // [PWMCFG2 - PWM Configuration 2]$
 243   1      
 244   1        // $[PWMCFG3 - PWMCFG3]
 245   1        // [PWMCFG3 - PWMCFG3]$
 246   1      
 247   1        // $[PWML - PWML]
 248   1        // [PWML - PWML]$
 249   1      
 250   1        // $[PWMH - PWMH]
 251   1        // [PWMH - PWMH]$
 252   1      
 253   1        // $[PWMLIML - PWMLIML]
 254   1        /***********************************************************************
 255   1         - PWM Counter Limit LSB = 0xFF
 256   1         ***********************************************************************/
 257   1        PWMLIML = (0xFF << PWMLIML_PWMLIML__SHIFT);
 258   1        // [PWMLIML - PWMLIML]$
 259   1      
 260   1        // $[PWMLIMH - PWMLIMH]
 261   1        /***********************************************************************
 262   1         - PWM Counter Limit MSB = 0xFF
 263   1         ***********************************************************************/
 264   1        PWMLIMH = (0xFF << PWMLIMH_PWMLIMH__SHIFT);
 265   1        // [PWMLIMH - PWMLIMH]$
 266   1      
 267   1        // $[PWMDTIPLIM - PWMDTIPLIM]
 268   1        // [PWMDTIPLIM - PWMDTIPLIM]$
 269   1      
 270   1        // $[PWMDTINLIM - PWMDTINLIM]
 271   1        // [PWMDTINLIM - PWMDTINLIM]$
 272   1      
 273   1        // $[PWMIE - PWMIE]
 274   1        // [PWMIE - PWMIE]$
 275   1      
 276   1        // Set the compare registers of channels 0 and 1 to sensible initial values.
 277   1        // This is done synchronously, although that's not strictly necessary at this
 278   1        // time since we haven't enabled the peripheral yet.
 279   1        // See pwm_set() for further information.
 280   1        PWMCFG0 &= ~PWMCFG0_SYNCUPD__FMASK;
 281   1        PWMCPUDL0 = DEFAULT_PWM_CHANNEL0 & 0xff;
 282   1        PWMCPUDH0 = (DEFAULT_PWM_CHANNEL0 >> 8) & 0xff;
 283   1        PWMCPUDL1 = DEFAULT_PWM_CHANNEL1 & 0xff;
 284   1        PWMCPUDH1 = (DEFAULT_PWM_CHANNEL1 >> 8) & 0xff;
 285   1        PWMCFG0 |= PWMCFG0_SYNCUPD__CH0CH1CH2;
 286   1      
 287   1        // Enable output on channels 0 and 1.
 288   1        PWMCFG2 |= PWMCFG2_CH0EN__BMASK;
 289   1        PWMCFG2 |= PWMCFG2_CH1EN__BMASK;
 290   1      
 291   1        // $[PWM On]
 292   1        PWMCFG1 |= PWMCFG1_PWMEN__ENABLE;
 293   1        // [PWM On]$
 294   1      
 295   1      }
 296          
 297          extern void
 298          PORTS_3_enter_DefaultMode_from_RESET (void)
 299          {
 300   1        // $[P3 - Port 3 Pin Latch]
 301   1        // [P3 - Port 3 Pin Latch]$
 302   1      
 303   1        // $[P3MDOUT - Port 3 Output Mode]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/23/2023 06:07:28 PAGE 6   

 304   1        // [P3MDOUT - Port 3 Output Mode]$
 305   1      
 306   1        // $[P3MDIN - Port 3 Input Mode]
 307   1        /***********************************************************************
 308   1         - P3.0 pin is configured for digital mode
 309   1         - P3.1 pin is configured for digital mode
 310   1         - P3.2 pin is configured for digital mode
 311   1         - P3.3 pin is configured for digital mode
 312   1         - P3.4 pin is configured for digital mode
 313   1         - P3.7 pin is configured for analog mode
 314   1         ***********************************************************************/
 315   1        SFRPAGE = 0x20;
 316   1        P3MDIN = P3MDIN_B0__DIGITAL | P3MDIN_B1__DIGITAL | P3MDIN_B2__DIGITAL
 317   1            | P3MDIN_B3__DIGITAL | P3MDIN_B4__DIGITAL | P3MDIN_B7__ANALOG;
 318   1        // [P3MDIN - Port 3 Input Mode]$
 319   1      
 320   1      }
 321          
 322          extern void
 323          PORTS_1_enter_DefaultMode_from_RESET (void)
 324          {
 325   1        // $[P1 - Port 1 Pin Latch]
 326   1        // [P1 - Port 1 Pin Latch]$
 327   1      
 328   1        // $[P1MDOUT - Port 1 Output Mode]
 329   1        /***********************************************************************
 330   1         - P1.0 output is open-drain
 331   1         - P1.1 output is open-drain
 332   1         - P1.2 output is open-drain
 333   1         - P1.3 output is open-drain
 334   1         - P1.4 output is push-pull
 335   1         - P1.5 output is open-drain
 336   1         - P1.6 output is open-drain
 337   1         - P1.7 output is open-drain
 338   1         ***********************************************************************/
 339   1        P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 340   1            | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__PUSH_PULL
 341   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__OPEN_DRAIN
 342   1            | P1MDOUT_B7__OPEN_DRAIN;
 343   1        // [P1MDOUT - Port 1 Output Mode]$
 344   1      
 345   1        // $[P1MDIN - Port 1 Input Mode]
 346   1        /***********************************************************************
 347   1         - P1.0 pin is configured for analog mode
 348   1         - P1.1 pin is configured for analog mode
 349   1         - P1.2 pin is configured for analog mode
 350   1         - P1.3 pin is configured for analog mode
 351   1         - P1.4 pin is configured for digital mode
 352   1         - P1.5 pin is configured for analog mode
 353   1         - P1.6 pin is configured for analog mode
 354   1         - P1.7 pin is configured for analog mode
 355   1         ***********************************************************************/
 356   1        P1MDIN = P1MDIN_B0__ANALOG | P1MDIN_B1__ANALOG | P1MDIN_B2__ANALOG
 357   1            | P1MDIN_B3__ANALOG | P1MDIN_B4__DIGITAL | P1MDIN_B5__ANALOG
 358   1            | P1MDIN_B6__ANALOG | P1MDIN_B7__ANALOG;
 359   1        // [P1MDIN - Port 1 Input Mode]$
 360   1      
 361   1        // $[P1SKIP - Port 1 Skip]
 362   1        // [P1SKIP - Port 1 Skip]$
 363   1      
 364   1        // $[P1MASK - Port 1 Mask]
 365   1        // [P1MASK - Port 1 Mask]$
 366   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/23/2023 06:07:28 PAGE 7   

 367   1        // $[P1MAT - Port 1 Match]
 368   1        // [P1MAT - Port 1 Match]$
 369   1      
 370   1      }
 371          
 372          extern void
 373          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 374          {
 375   1        // $[EIE1 - Extended Interrupt Enable 1]
 376   1        // [EIE1 - Extended Interrupt Enable 1]$
 377   1      
 378   1        // $[EIE2 - Extended Interrupt Enable 2]
 379   1        // [EIE2 - Extended Interrupt Enable 2]$
 380   1      
 381   1        // $[EIP1H - Extended Interrupt Priority 1 High]
 382   1        // [EIP1H - Extended Interrupt Priority 1 High]$
 383   1      
 384   1        // $[EIP1 - Extended Interrupt Priority 1 Low]
 385   1        // [EIP1 - Extended Interrupt Priority 1 Low]$
 386   1      
 387   1        // $[EIP2 - Extended Interrupt Priority 2]
 388   1        // [EIP2 - Extended Interrupt Priority 2]$
 389   1      
 390   1        // $[EIP2H - Extended Interrupt Priority 2 High]
 391   1        // [EIP2H - Extended Interrupt Priority 2 High]$
 392   1      
 393   1        // $[IE - Interrupt Enable]
 394   1        /***********************************************************************
 395   1         - Enable each interrupt according to its individual mask setting
 396   1         - Disable external interrupt 0
 397   1         - Disable external interrupt 1
 398   1         - Disable all SPI0 interrupts
 399   1         - Disable all Timer 0 interrupt
 400   1         - Disable all Timer 1 interrupt
 401   1         - Enable interrupt requests generated by the TF2L or TF2H flags
 402   1         - Enable UART0 interrupt
 403   1         ***********************************************************************/
 404   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 405   1            | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__ENABLED | IE_ES0__ENABLED;
 406   1        // [IE - Interrupt Enable]$
 407   1      
 408   1        // $[IP - Interrupt Priority]
 409   1        // [IP - Interrupt Priority]$
 410   1      
 411   1        // $[IPH - Interrupt Priority High]
 412   1        // [IPH - Interrupt Priority High]$
 413   1      
 414   1      }
 415          
 416          extern void
 417          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 418          {
 419   1        // $[CKCON0 - Clock Control 0]
 420   1        /***********************************************************************
 421   1         - System clock divided by 4
 422   1         - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 423   1         - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 424   1         - Timer 2 low byte uses the system clock
 425   1         - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 426   1         - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 427   1         - Timer 1 uses the system clock
 428   1         ***********************************************************************/
 429   1        SFRPAGE = 0x00;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/23/2023 06:07:28 PAGE 8   

 430   1        CKCON0 = CKCON0_SCA__SYSCLK_DIV_4 | CKCON0_T0M__PRESCALE
 431   1            | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__SYSCLK
 432   1            | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 433   1            | CKCON0_T1M__SYSCLK;
 434   1        // [CKCON0 - Clock Control 0]$
 435   1      
 436   1        // $[CKCON1 - Clock Control 1]
 437   1        // [CKCON1 - Clock Control 1]$
 438   1      
 439   1        // $[TMOD - Timer 0/1 Mode]
 440   1        /***********************************************************************
 441   1         - Mode 0, 13-bit Counter/Timer
 442   1         - Mode 2, 8-bit Counter/Timer with Auto-Reload
 443   1         - Timer Mode
 444   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 445   1         - Timer Mode
 446   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 447   1         ***********************************************************************/
 448   1        TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 449   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 450   1        // [TMOD - Timer 0/1 Mode]$
 451   1      
 452   1        // $[TCON - Timer 0/1 Control]
 453   1        /***********************************************************************
 454   1         - Start Timer 1 running
 455   1         ***********************************************************************/
 456   1        TCON |= TCON_TR1__RUN;
 457   1        // [TCON - Timer 0/1 Control]$
 458   1      
 459   1      }
 460          
 461          extern void
 462          TIMER16_2_enter_DefaultMode_from_RESET (void)
 463          {
 464   1        // $[Timer Initialization]
 465   1        // Save Timer Configuration
 466   1        uint8_t TMR2CN0_TR2_save;
 467   1        TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 468   1        // Stop Timer
 469   1        TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 470   1        // [Timer Initialization]$
 471   1      
 472   1        // $[TMR2CN1 - Timer 2 Control 1]
 473   1        // [TMR2CN1 - Timer 2 Control 1]$
 474   1      
 475   1        // $[TMR2CN0 - Timer 2 Control]
 476   1        // [TMR2CN0 - Timer 2 Control]$
 477   1      
 478   1        // $[TMR2H - Timer 2 High Byte]
 479   1        // [TMR2H - Timer 2 High Byte]$
 480   1      
 481   1        // $[TMR2L - Timer 2 Low Byte]
 482   1        // [TMR2L - Timer 2 Low Byte]$
 483   1      
 484   1        // $[TMR2RLH - Timer 2 Reload High Byte]
 485   1        // [TMR2RLH - Timer 2 Reload High Byte]$
 486   1      
 487   1        // $[TMR2RLL - Timer 2 Reload Low Byte]
 488   1        // [TMR2RLL - Timer 2 Reload Low Byte]$
 489   1      
 490   1        // $[TMR2CN0]
 491   1        /***********************************************************************
 492   1         - Start Timer 2 running
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/23/2023 06:07:28 PAGE 9   

 493   1         ***********************************************************************/
 494   1        TMR2CN0 |= TMR2CN0_TR2__RUN;
 495   1        // [TMR2CN0]$
 496   1      
 497   1        // $[Timer Restoration]
 498   1        // Restore Timer Configuration
 499   1        TMR2CN0 |= TMR2CN0_TR2_save;
 500   1        // [Timer Restoration]$
 501   1      
 502   1      }
 503          
 504          extern void
 505          TIMER16_3_enter_DefaultMode_from_RESET (void)
 506          {
 507   1        // $[Timer Initialization]
 508   1        // Save Timer Configuration
 509   1        uint8_t TMR3CN0_TR3_save;
 510   1        TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 511   1        // Stop Timer
 512   1        TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 513   1        // [Timer Initialization]$
 514   1      
 515   1        // $[TMR3CN1 - Timer 3 Control 1]
 516   1        // [TMR3CN1 - Timer 3 Control 1]$
 517   1      
 518   1        // $[TMR3CN0 - Timer 3 Control]
 519   1        // [TMR3CN0 - Timer 3 Control]$
 520   1      
 521   1        // $[TMR3H - Timer 3 High Byte]
 522   1        // [TMR3H - Timer 3 High Byte]$
 523   1      
 524   1        // $[TMR3L - Timer 3 Low Byte]
 525   1        // [TMR3L - Timer 3 Low Byte]$
 526   1      
 527   1        // $[TMR3RLH - Timer 3 Reload High Byte]
 528   1        /***********************************************************************
 529   1         - Timer 3 Reload High Byte = 0xF0
 530   1         ***********************************************************************/
 531   1        TMR3RLH = (0xF0 << TMR3RLH_TMR3RLH__SHIFT);
 532   1        // [TMR3RLH - Timer 3 Reload High Byte]$
 533   1      
 534   1        // $[TMR3RLL - Timer 3 Reload Low Byte]
 535   1        /***********************************************************************
 536   1         - Timer 3 Reload Low Byte = 0x0D
 537   1         ***********************************************************************/
 538   1        TMR3RLL = (0x0D << TMR3RLL_TMR3RLL__SHIFT);
 539   1        // [TMR3RLL - Timer 3 Reload Low Byte]$
 540   1      
 541   1        // $[TMR3CN0]
 542   1        /***********************************************************************
 543   1         - Start Timer 3 running
 544   1         ***********************************************************************/
 545   1        TMR3CN0 |= TMR3CN0_TR3__RUN;
 546   1        // [TMR3CN0]$
 547   1      
 548   1        // $[Timer Restoration]
 549   1        // Restore Timer Configuration
 550   1        TMR3CN0 |= TMR3CN0_TR3_save;
 551   1        // [Timer Restoration]$
 552   1      
 553   1      }
 554          
 555          extern void
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/23/2023 06:07:28 PAGE 10  

 556          TIMER16_4_enter_DefaultMode_from_RESET (void)
 557          {
 558   1        // $[Timer Initialization]
 559   1        // Save Timer Configuration
 560   1        uint8_t TMR4CN0_TR4_save;
 561   1        SFRPAGE = 0x10;
 562   1        TMR4CN0_TR4_save = TMR4CN0 & TMR4CN0_TR4__BMASK;
 563   1        // Stop Timer
 564   1        TMR4CN0 &= ~(TMR4CN0_TR4__BMASK);
 565   1        // [Timer Initialization]$
 566   1      
 567   1        // $[TMR4CN1 - Timer 4 Control 1]
 568   1        // [TMR4CN1 - Timer 4 Control 1]$
 569   1      
 570   1        // $[TMR4CN0 - Timer 4 Control]
 571   1        /***********************************************************************
 572   1         - Timer 4 is clocked by Timer 3 overflows
 573   1         ***********************************************************************/
 574   1        TMR4CN0 &= ~TMR4CN0_T4XCLK__FMASK;
 575   1        TMR4CN0 |= TMR4CN0_T4XCLK__TIMER3;
 576   1        // [TMR4CN0 - Timer 4 Control]$
 577   1      
 578   1        // $[TMR4H - Timer 4 High Byte]
 579   1        // [TMR4H - Timer 4 High Byte]$
 580   1      
 581   1        // $[TMR4L - Timer 4 Low Byte]
 582   1        // [TMR4L - Timer 4 Low Byte]$
 583   1      
 584   1        // $[TMR4RLH - Timer 4 Reload High Byte]
 585   1        // [TMR4RLH - Timer 4 Reload High Byte]$
 586   1      
 587   1        // $[TMR4RLL - Timer 4 Reload Low Byte]
 588   1        // [TMR4RLL - Timer 4 Reload Low Byte]$
 589   1      
 590   1        // $[TMR4CN0]
 591   1        /***********************************************************************
 592   1         - Start Timer 4 running
 593   1         ***********************************************************************/
 594   1        TMR4CN0 |= TMR4CN0_TR4__RUN;
 595   1        // [TMR4CN0]$
 596   1      
 597   1        // $[Timer Restoration]
 598   1        // Restore Timer Configuration
 599   1        TMR4CN0 |= TMR4CN0_TR4_save;
 600   1        // [Timer Restoration]$
 601   1      
 602   1      }
 603          
 604          extern void
 605          UART_0_enter_DefaultMode_from_RESET (void)
 606          {
 607   1        // $[SCON0 - UART0 Serial Port Control]
 608   1        /***********************************************************************
 609   1         - UART0 reception enabled
 610   1         - RI is set and an interrupt is generated only when the stop bit is
 611   1         logic 1
 612   1         ***********************************************************************/
 613   1        SFRPAGE = 0x00;
 614   1        SCON0 |= SCON0_REN__RECEIVE_ENABLED | SCON0_MCE__MULTI_ENABLED;
 615   1        // [SCON0 - UART0 Serial Port Control]$
 616   1      
 617   1      }
 618          
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/23/2023 06:07:28 PAGE 11  

 619          extern void
 620          TIMER01_0_enter_DefaultMode_from_RESET (void)
 621          {
 622   1      
 623   1        // $[Timer Initialization]
 624   1        //Save Timer Configuration
 625   1        uint8_t TCON_save;
 626   1        SFRPAGE = 0x00;
 627   1        TCON_save = TCON;
 628   1        //Stop Timers
 629   1        TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 630   1      
 631   1        // [Timer Initialization]$
 632   1      
 633   1        // $[TH0 - Timer 0 High Byte]
 634   1        // [TH0 - Timer 0 High Byte]$
 635   1      
 636   1        // $[TL0 - Timer 0 Low Byte]
 637   1        // [TL0 - Timer 0 Low Byte]$
 638   1      
 639   1        // $[TH1 - Timer 1 High Byte]
 640   1        /***********************************************************************
 641   1         - Timer 1 High Byte = 0x2B
 642   1         ***********************************************************************/
 643   1        TH1 = (0x2B << TH1_TH1__SHIFT);
 644   1        // [TH1 - Timer 1 High Byte]$
 645   1      
 646   1        // $[TL1 - Timer 1 Low Byte]
 647   1        // [TL1 - Timer 1 Low Byte]$
 648   1      
 649   1        // $[Timer Restoration]
 650   1        //Restore Timer Configuration
 651   1        TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 652   1      
 653   1        // [Timer Restoration]$
 654   1      
 655   1      }
 656          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    326    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
