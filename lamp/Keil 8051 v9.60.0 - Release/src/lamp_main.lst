C51 COMPILER V9.60.0.0   LAMP_MAIN                                                         03/04/2023 16:53:23 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LAMP_MAIN
OBJECT MODULE PLACED IN .\src\lamp_main.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\elass\S
                    -implicityStudio\v5_workspace\lamp_2\src\lamp_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(
                    -3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\elass\SimplicityStudio\v5_workspace\l
                    -amp_2\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/shared/si8051Base;C:/SiliconLabs/Simplic
                    -ityStudio/v5/developer/sdks/8051/v4.2.5//Device/EFM8BB52/inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2
                    -.5//Device/EFM8BB52/peripheral_driver/inc) REGFILE(lamp_2.ORC) PRINT(.\src\lamp_main.lst) COND PAGEWIDTH(120) PAGELENGTH
                    -(65) OBJECT(.\src\lamp_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/lamp_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <state_machine.h>
  13          #include <SI_EFM8BB52_Register_Enums.h>                  // SFR declarations
  14          #include "InitDevice.h"
  15          #include "timer_4.h"
  16          #include "pwm.h"
  17          #include "rtc_driver.h"
  18          
  19          // $[Generated Includes]
  20          // [Generated Includes]$
  21          
  22          
  23          //-----------------------------------------------------------------------------
  24          // SiLabs_Startup() Routine
  25          // ----------------------------------------------------------------------------
  26          // This function is called immediately after reset, before the initialization
  27          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  28          // useful place to disable the watchdog timer, which is enable by default
  29          // and may trigger before main() in some instances.
  30          //-----------------------------------------------------------------------------
  31          void
  32          SiLabs_Startup(void)
  33          {
  34   1        // $[SiLabs Startup]
  35   1        // [SiLabs Startup]$
  36   1      }
  37          
  38          
  39          
  40          int main(void) {
  41   1        event_t event;
  42   1      
  43   1      
  44   1        // RTC module reset (before global init)
  45   1        rtc_reset();
  46   1      
  47   1        // Call hardware initialization routine
  48   1        enter_DefaultMode_from_RESET ();
  49   1      
  50   1        // Set all the button pins high.
C51 COMPILER V9.60.0.0   LAMP_MAIN                                                         03/04/2023 16:53:23 PAGE 2   

  51   1        // Because the pins are configured as open-drain, setting them high disables
  52   1        // their MOSFETs (which would otherwise pull down against their internal
  53   1        // pullup resistors and external pullups, if present) and lets the pullups
  54   1        // pull them high.
  55   1        // Then, when they are externally pulled low by the user pressing the tactile
  56   1        // switches, we will be able to read this as a change in this very same PORT3
  57   1        // register.
  58   1        //P3 |= P3_BTN_BMASK;
  59   1      
  60   1      
  61   1      
  62   1        read_time_from_RTC();
  63   1      
  64   1        // Main loop
  65   1        while (1){
  66   2            // $[Generated Run-time code]
  67   2            // [Generated Run-time code]$
  68   2      
  69   2            // Fetch current event, run the state machine, and delay
  70   2            event = fetch_event();
  71   2            state_machine_run_iteration(event);
  72   2            timer_4_delay_ms(STATE_MACHINE_PERIOD);
  73   2          }
  74   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     31    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
